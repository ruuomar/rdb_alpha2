builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp/
pwd
ls --color=auto
cd test/
pwd
ls --color=auto
cd ..
ls --color=auto
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
__vsc_prompt_cmd_original
clear
ls --color=auto
cd node_modules/
ls --color=auto
__vsc_prompt_cmd_original
cd has
ls --color=auto
__vsc_prompt_cmd_original
ls --color=auto
__vsc_prompt_cmd_original
clear
ls --color=auto
cd src/
pwd
ls --color=auto
__vsc_prompt_cmd_original
cd ..
cd ..
cd ../..
pwd
clear
mkdir website
ls --color=auto
cd website/
ls --color=auto
echo hello website
touch index.html
touch style.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto --a
list --all
touch background.jpg
touch header.png
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg images
cd images/
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images
cp footer.jpeg images/
cd images/
ls --color=auto
cd ..
ls --color=auto
rm header.png
rm footer.jpeg
ls --color=auto
mv roboto.font robotto.woff
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
mkdir fonts
ls --color=auto
mv robotto.woff fonts/
find
mv lato.ttf fonts
mv menlo.otf fonts
find
mkdir client
mkdir client/src
mv index.html client/src
file
mv index.js client/src
mv style.css client/src/
find
find client/
find --help
find -name index.html
find -name style.css
find -name src
find
cd client/
mkdir assets
cd assets/
mkdir images
__vsc_prompt_cmd_original
cd images/
touch background.jpg
cd ..
cd images/
ls --color=auto
touch header.png
mv header.png website
cd ..
ls --color=auto
cd ../..
ls --color=auto
find header.png
find images/footer.jpeg
find images/footer.jpeg
find
rmdir images
ls --color=auto
ls --color=auto
ls --color=auto
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n c5cb0a82-3382-49ff-aa76-403d6e85fc7a
cat /proc/self/environ
echo -n c5cb0a82-3382-49ff-aa76-403d6e85fc7a
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/1a5daa3a0231a0fbba4f14db7ec463cf99d7768e/node' -p '"ac3cd9eccf6c" + JSON.stringify(process.env) + "ac3cd9eccf6c"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
cd website/
ls --color=auto
cd client/assets/
mkdir icons
cd ../..
mv CodeAlly.svg client/assets/icons/
find
mv CodeRoad.svg client/assets/icons/
mv FreeCodeCamp.svg client/assets/icons/
mv FreefodeCamp.svg client/assets/icons/
mv FreefofeCaCp.svg client/assets/icons/
mv freeCodeCamp.svg client/assets/icons/
find
mkdir fonts client/assets/
cd client/assets
mkdir fonts
touch robotto-bold.woff
touch roboto-light.woff
ls --color=auto
mv roboto-bold.woff fonts
__vsc_prompt_cmd_original
mv robotto-bold.woff fonts
mv roboto-light.woff fonts
find clients/assets/fonts
find clients/asset/fonts
find clients/asset/fonts
find client/assets/fonts
find fonts
touch lato-bo fonts d.ttf
ls --color=auto
find fonts
touch fonts lato-bold.ttf
ls --color=auto
mv lato-bo
rm lato-bo
rm d.ttf
touch lato-bold.ttf fonts
ls --color=auto
mv lato-bold.ttf fonts
ls --color=auto
touch fonts/lato-light.ttf
ls --color=auto
find fonts/
find
rm --help
cd ../..
rmdir -f fonts
rmdir --force fonts
rm --force fonts
rm --f fonts
rm -r fonts
__vsc_prompt_cmd_original
ls --color=auto
find
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
more README.md
echo from the command line >> README.md
more README.md
echo for the freeCodeCamp lesons >> README.md
more README.md
CD ..
cd ..
ls --color=auto
mv website website-boilerplate
ls --color=auto
cp --help
cp -r website-boilerplate toms-website
ls --color=auto
find toms-website/
find website-boilerplate/
clear
echo goodbye terminal
exit
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
echo -n 227a87db-e6d3-40ff-9b62-d2a2613c13ff
cat /proc/self/environ
echo -n 227a87db-e6d3-40ff-9b62-d2a2613c13ff
[ -d "$HOME/bin" ]
[ -d "$HOME/.local/bin" ]
'/vscode/vscode-server/bin/linux-x64/1a5daa3a0231a0fbba4f14db7ec463cf99d7768e/node' -p '"47b261140b97" + JSON.stringify(process.env) + "47b261140b97"'
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git init
git add .
